<!--===========================================================================
  This is the build file for the sample-use-lightweight project.
  
  This build file will use the build-res/subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See build-res/subfloor.xml for more details
============================================================================-->
<project name="sample-use-lightweight" basedir="." default="default">

    <description>
        This build file is used to create the API project
        and works with the build-res/subfloor.xml file.
    </description>


    <property file="${user.home}/.pentaho-reporting-build-settings.properties"
              description="Per user override settings-file for all pentaho-reporting projects."/>

    <!-- Define the default location of the common build file -->
    <property name="reporting.build.file" value="../build-res/reporting-shared.xml"
              description="This is the location of the standardized build-res/reporting-shared.xml file"/>

    <!-- Import the build-res/subfloor.xml file which contains all the default tasks -->
    <import file="${reporting.build.file}"/>

    <!-- Define the default location of the common build file -->
    <property name="common.build.file" value="./build-res/subfloor.xml"
              description="This is the location of the standardized build-res/subfloor.xml file"/>

    <!-- Import the build-res/subfloor.xml file which contains all the default tasks -->
    <import file="${common.build.file}"/>

    <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN build-res/subfloor.xml.
    -->

    <!-- Override default dist target to do a dist-full instead -->
    <target name="dist" depends="clean-local-jar,subfloor.dist,copy-local-jar"/>

    <target name="test"/>
    <target name="compile-tests"/>
    <target name="cobertura"/>


    <target name="clean-local-jar">
        <delete file="${ivy.artifact.id}-${project.revision}.jar" failonerror="false"/>
    </target>

    <target name="copy-local-jar">
        <copy file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar"
              tofile="${ivy.artifact.id}-${project.revision}.jar" failonerror="false"/>
    </target>

    <target name="generate.manifest" depends="subfloor.generate.manifest">
        <manifestclasspath property="jar.classpath" jarfile="dist.jar">
            <classpath refid="classpath"/>
        </manifestclasspath>

        <manifest file="${dist.manifest.file}" mode="update">
            <attribute name="Class-Path" value="${jar.classpath}"/>
        </manifest>
    </target>
</project>
